{"version":3,"sources":["app.module.scss","App.tsx","reportWebVitals.js","utils/methods.ts","config/config.default.ts","locales/en-US.ts","locales/zh-CN.ts","stores/global.ts","stores/index.ts","history/index.ts","index.tsx","assets/icon/cloud_login.svg"],"names":["module","exports","App","inject","observer","globalStore","getAppLocale","messages","locale","antdLocal","className","type","id","src","cloud_login","alt","style","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Methods","values","value","defaults","str","key","toLocaleLowerCase","split","language","includes","languages","enUS","Object","assign","zhCN","GlobalStore","this","zhCn","observable","matchLanguageValue","navigator","computed","createBrowserHistory","ReactDOM","render","StrictMode","stores","history","document","getElementById"],"mappings":"6JACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAW,sBAAsB,gBAAgB,2BAA2B,aAAa,wBAAwB,WAAW,wB,gMC2CtJC,EArBHC,YAAO,cAAPA,CACVC,aAAS,YAAgC,IACvC,EADsC,EAA5BC,YAERC,aAAgBC,EADlB,EACkBA,SADlB,IAC4BC,cAD5B,MACqC,QADrC,EAC8CC,EAD9C,EAC8CA,UAG9C,OACE,uBAAgBD,OAAQC,GACtB,kBAAC,IAAD,CAAcD,OAAQA,EAAQD,SAAUA,GACtC,yBAAKG,UAAU,OACb,uBAAQC,KAAK,WACX,kBAAC,IAAD,CAAkBC,GAAG,+BAEvB,yBAAKC,IAAKC,IAAaC,IAAI,GAAGC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,cCxBxDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,yDCPOQ,E,uGAWnB,SAA0BC,EAAkBC,EAAeC,GACzD,IAD2E,EACvEC,EAAM,GADiE,cAEzDH,GAFyD,IAE3E,2BAA0B,CAAC,IAAhBI,EAAe,QACpBH,EAAMI,sBAAwBD,EAAIC,sBACpCF,EAAMC,IAJiE,8BAO3E,MAAmBH,EAAMK,MAAM,KAAxBC,EAAP,oBACA,IAAKJ,EAAK,CAAC,IAAD,gBACUH,GADV,IACR,2BAA0B,CAAC,IAAhBI,EAAe,QACpBA,EAAIC,oBAAoBG,SAASD,KACnCJ,EAAMC,IAHF,+BAOV,OAAOD,GAAOD,M,YCxBLO,EAAwB,CAAC,QAAS,S,QCAhC,GACb7B,U,OAAW8B,EACX/B,OAAQ,QACRD,SAAUiC,OAAOC,OAAO,CACtB,4BAA6B,Y,QCJlB,GACbhC,U,OAAWiC,EACXlC,OAAQ,QACRD,SAAUiC,OAAOC,OAAO,CACtB,4BAA6B,kBCUZE,G,gIAcnB,WACE,MAAyB,UAAlBC,KAAKR,SAAuBS,EAAON,M,2CAb3CO,K,yEAA6BlB,EAAQmB,mBACpCT,EACAU,UAAUZ,SACV,Y,wCASDa,K,4EChBY,MAJb,aAAe,yBADR5C,iBACO,EACZuC,KAAKvC,YAAc,IAAIsC,G,iBCTZO,gBCQfC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAaC,EACZ,kBAAC,IAAD,CAAQC,QAASA,GACf,kBAAC,EAAD,QAHN,KAQAC,SAASC,eAAe,SAM1BtC,K,mBCzBAnB,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.4c061d1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__1w8Tx\",\"App-logo\":\"app_App-logo__2NH6u\",\"App-logo-spin\":\"app_App-logo-spin__tI3Nc\",\"App-header\":\"app_App-header__3Yl2W\",\"App-link\":\"app_App-link__3gGPU\"};","/**\n * @Author: yanghuan\n * @Date: 2021-04-26 16:38:22\n * @Last Modified by: yanghuan\n * @Last Modified time: 2021-04-28 16:48:03\n *\n * @package\n * @module App\n * @description 应用入口\n */\n\nimport React from \"react\";\nimport \"@/app.module.scss\";\nimport { Button, ConfigProvider } from \"antd\";\nimport { inject, observer } from \"mobx-react\";\nimport GlobalStore from \"./stores/global\";\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\nimport cloud_login from \"@/assets/icon/cloud_login.svg\";\n\ninterface AppProps {\n  globalStore?: GlobalStore;\n}\n\nconst App = inject(\"globalStore\")(\n  observer(({ globalStore }: AppProps) => {\n    const {\n      getAppLocale: { messages, locale = \"en-US\", antdLocal },\n    } = globalStore!;\n\n    return (\n      <ConfigProvider locale={antdLocal}>\n        <IntlProvider locale={locale} messages={messages}>\n          <div className=\"App\">\n            <Button type=\"primary\">\n              <FormattedMessage id=\"global.form.button.submit\" />\n            </Button>\n            <img src={cloud_login} alt=\"\" style={{ width: 100, height: 100 }} />\n          </div>\n        </IntlProvider>\n      </ConfigProvider>\n    );\n  }),\n);\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default class Methods {\n  /**\n   * @description\n   * @author yanghuan\n   * @static\n   * @param {string[]} values\n   * @param {string} value\n   * @param {string} defaults\n   * @returns {T}\n   * @memberof Methods\n   */\n  static matchLanguageValue(values: string[], value: string, defaults: string) {\n    let str = \"\";\n    for (const key of values) {\n      if (value.toLocaleLowerCase() === key.toLocaleLowerCase()) {\n        str = key;\n      }\n    }\n    const [language] = value.split(\"-\");\n    if (!str) {\n      for (const key of values) {\n        if (key.toLocaleLowerCase().includes(language)) {\n          str = key;\n        }\n      }\n    }\n    return str || defaults;\n  }\n}\n","export type Language = \"zh-CN\" | \"en-US\";\n\nexport const languages: Language[] = [\"zh-CN\", \"en-US\"];\n","import enUS from \"antd/lib/locale/en_US\";\n\nexport default {\n  antdLocal: enUS,\n  locale: \"en-US\",\n  messages: Object.assign({\n    \"global.form.button.submit\": \"Submit\",\n  }),\n};\n","import zhCN from \"antd/lib/locale/zh_CN\";\n\nexport default {\n  antdLocal: zhCN,\n  locale: \"zh-CN\",\n  messages: Object.assign({\n    \"global.form.button.submit\": \"提交\",\n  }),\n};\n","/**\n * @Author: yanghuan\n * @Date: 2021-04-28 15:51:22\n * @Last Modified by: yanghuan\n * @Last Modified time: 2021-04-28 16:16:47\n *\n * @description 全局Store\n * @module GlobalStore\n */\n\nimport Methods from \"@/utils/methods\";\nimport { computed, observable } from \"mobx\";\nimport { Language, languages } from \"../config/config.default\";\nimport enUS from \"@/locales/en-US\";\nimport zhCn from \"@/locales/zh-CN\";\n\nexport default class GlobalStore {\n  /** 当前语言 */\n  @observable public language = Methods.matchLanguageValue(\n    languages,\n    navigator.language,\n    \"en-US\",\n  ) as Language;\n\n  /**\n   * @description 当前语言国际化配置\n   * @author yanghuan\n   * @readonly\n   * @memberof GlobalStore\n   */\n  @computed public get getAppLocale() {\n    return this.language === \"zh-CN\" ? zhCn : enUS;\n  }\n}\n","/**\n * @Author: yanghuan\n * @Date: 2021-04-27 15:39:27\n * @Last Modified by: yanghuan\n * @Last Modified time: 2021-04-28 17:09:31\n */\n\nimport GlobalStore from \"./global\";\nexport class RootStore {\n  public globalStore: GlobalStore;\n  constructor() {\n    this.globalStore = new GlobalStore();\n  }\n}\nexport default new RootStore();\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"@/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport stores from \"@/stores\";\nimport { Provider } from \"mobx-react\";\nimport { Router } from \"react-router-dom\";\nimport history from \"@/history\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider {...stores}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </Provider>\n    ,\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/cloud_login.4470ea50.svg\";"],"sourceRoot":""}